# docker compose file, only for development/test

services:
  lekhakaar_api:
    build:
      context: .
      dockerfile: docker/Dockerfile.api
    platform: linux/amd64
    restart: unless-stopped
    networks:
      - lekhakaar_api_net
    depends_on:
      # - em_services_master_db
      - redis
    volumes:
      # - .:/opt/lekhakaar_api
      # - /opt/lekhakaar_api/node_modules
      - ../media_storage:/opt/media_storage
    ports:
      - '8000:8000'
      # - '9229:9229'
    env_file:
      - .env
    command: ['npm', 'run', 'start_api']

  bull_mq:
    build:
      context: .
      dockerfile: docker/Dockerfile.mq
    platform: linux/amd64
    restart: unless-stopped
    depends_on:
      # - em_services_master_db
      - redis
    volumes:
      # - .:/opt/bull_mq
      - ../media_storage:/opt/media_storage
    networks:
      - lekhakaar_api_net
    # ports:
    # - '9230:9230'
    env_file:
      - .env
    command: ['node', 'run', 'start_mq']

  # em_service_master_db:
  #   image: postgres:latest
  #   container_name: em_services_master_db
  #   environment:
  #     - POSTGRES_DB=lekhakaar
  #     - POSTGRES_USER=fabnest-test
  #     - POSTGRES_PASSWORD=fabnest-test
  #     # - POSTGRES_REPLICATION_MODE=master
  #     # - POSTGRES_REPLICATION_USER=replica_user
  #     # - POSTGRES_REPLICATION_PASSWORD=replica_password
  #   networks:
  #     - wa-service-net
  #   ports:
  #     - 5432:5432
  #   volumes:
  #     - em_service_db_data:/var/lib/postgresql/data

  redis:
    image: redis
    restart: always
    ports:
      - 6379:6379
    networks:
      - lekhakaar_api_net

networks:
  lekhakaar_api_net:

volumes:
  # em_services_db_data:
  media_storage:
