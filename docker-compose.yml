# docker compose file, only for development/test

services:
  app:
    image: wa-services:latest
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    platform: linux/amd64
    # volumes:
    #   - .:/opt/wa_service
    environment:
      - NODE_ENV:development
    depends_on:
      - wa_services_master_db
      - redis
    networks:
      - wa-service-net
    ports:
      - 3000:3000
      - 9229:9229
    command: ['node', 'bin/run.js']

  # admin:
  #   image: sip-rocket:latest
  #   build:
  #     context: .
  #     dockerfile: ./docker/Dockerfile
  #   platform: linux/amd64
  #   volumes:
  #     - .:/opt/sip_rocket
  #   environment:
  #     - NODE_ENV:development
  #   depends_on:
  #     - sip_rocket_master_test_db # remove this line if you don't want to use postgres
  #     - sip_rocket_slave_test_db # remove this line if you don't want to use postgres
  #     - redis
  #     - mongo
  #   networks:
  #     - sip-rocket-net
  #   ports:
  #     - 4050:4050
  #     - 9233:9233
  #   command: ['npx', 'nodemon', '--inspect=0.0.0.0:9233', 'bin/run_admin.js']

  # bullmq:
  #   image: sip-rocket:latest
  #   build:
  #     context: .
  #     dockerfile: ./docker/Dockerfile
  #   platform: linux/amd64
  #   volumes:
  #     - .:/opt/sip_rocket
  #   environment:
  #     - NODE_ENV:development
  #   depends_on:
  #     - sip_rocket_master_test_db # remove this line if you don't want to use postgres
  #     - sip_rocket_slave_test_db # remove this line if you don't want to use postgres
  #     - redis
  #     - mongo
  #   networks:
  #     - sip-rocket-net
  #   ports:
  #     - 9230:9230
  #   command:
  #     ['npx', 'nodemon', '--inspect=0.0.0.0:9230', 'bin/run_worker_manager.js']

  wa_services_master_db:
    image: postgres:latest
    container_name: wa_services_master_db
    environment:
      - POSTGRES_DB=lekhakaar
      - POSTGRES_USER=fabnest-test
      - POSTGRES_PASSWORD=fabnest-test
      # - POSTGRES_REPLICATION_MODE=master
      # - POSTGRES_REPLICATION_USER=replica_user
      # - POSTGRES_REPLICATION_PASSWORD=replica_password
    networks:
      - wa-service-net
    ports:
      - 5432:5432
    volumes:
      - wa_service_db_data:/var/lib/postgresql/data

  redis:
    image: redis
    restart: always
    ports:
      - 6379:6379
    networks:
      - wa-service-net

networks:
  wa-service-net:

volumes:
  wa_service_db_data:
